version: "3.9"

services:
  # app: 
    # build: .
    # depends_on:
    #   - keycloak
    #   - postgres
    # ports:
    #   - 80:3000
    # networks:
    #   - keycloak_network
    # environment:
    #   - DATABASE_URL=postgres://keycloak:keycloakpassword@postgres:5432/keycloak
  postgres:
    image: postgres:17-alpine
    container_name: keycloak_postgres
    restart: unless-stopped
    networks:
      - keycloak_network
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloakpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    container_name: keycloak
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - keycloak_network
    command:
      - start
      - --import-realm
      # - --optimized
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
    environment:
      # DB
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloakpassword

      # Recommended health and proxy settings
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      KC_PROXY: edge

      # Admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminpassword

      KC_HOSTNAME_STRICT: false
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:

networks:
  keycloak_network:
    driver: bridge
